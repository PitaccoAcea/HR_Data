"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9#!l2@tlc1wg%=hiu+^pjc*j47wvqg9!(ib+v+*c&*whk)3s=5'

# === Caricamento .env in base all'ambiente ===
# Regola: se DJANGO_ENV=prod carichiamo .env.prod (in wwwroot), altrimenti .env.dev (in dev)
env_default = os.environ.get("DJANGO_ENV", "dev").lower()

if env_default == "prod":
    # In produzione: .env nella cartella di IIS (wwwroot\HR_Data)
    env_path = BASE_DIR / ".env.prod"
else:
    # In sviluppo/test: .env.dev nella root del progetto in dev
    env_path = BASE_DIR / ".env.dev"

# Carica il file .env se esiste, altrimenti procede con variabili d'ambiente di sistema
load_dotenv(dotenv_path=env_path, override=False)

# Impostazioni base
DEBUG = os.environ.get("DJANGO_DEBUG", "True") == "True"

# ALLOWED_HOSTS: lista separata da virgole nel .env
ALLOWED_HOSTS = [h.strip() for h in os.environ.get("ALLOWED_HOSTS", "localhost,127.0.0.1").split(",") if h.strip()]



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "main",  # la nostra app minimale
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # serve file statici
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

# === Database: mssql-django + pyodbc ===
# Prendiamo tutto dal .env per evitare hardcode
DB_NAME = os.environ.get("HRDATA_DB_NAME", "HR_Data_DB_Test")
DB_HOST = os.environ.get("HRDATA_DB_HOST", "localhost")
DB_PORT = os.environ.get("HRDATA_DB_PORT", "")
DB_USER = os.environ.get("HRDATA_DB_USER", "")
DB_PWD  = os.environ.get("HRDATA_DB_PWD", "")
DB_DRIVER = os.environ.get("HRDATA_ODBC_DRIVER", "ODBC Driver 17 for SQL Server")
DB_TRUSTED = os.environ.get("HRDATA_TRUSTED", "no").lower()  # "yes" / "no"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "mssql",
        "NAME": DB_NAME,
        "HOST": DB_HOST,
        "PORT": DB_PORT,
        "OPTIONS": {
            "driver": DB_DRIVER,
            # Con SQL Login usiamo username/password e niente trusted_connection
            # Se DB_TRUSTED == "yes", potresti omettere USER/PASSWORD e usare account di Windows
        },
    }
    #'default': {
        #'ENGINE': 'django.db.backends.sqlite3',
        #'NAME': BASE_DIR / 'db.sqlite3',
    #}
}


if DB_TRUSTED == "yes":
    # Autenticazione integrata Windows
    DATABASES["default"]["OPTIONS"]["trusted_connection"] = "yes"
else:
    # SQL Login
    DATABASES["default"]["USER"] = DB_USER
    DATABASES["default"]["PASSWORD"] = DB_PWD

# Localizzazione
LANGUAGE_CODE = "it-it"
TIME_ZONE = "Europe/Rome"
USE_I18N = True
USE_TZ = True

# Statici: WhiteNoise
STATIC_URL = os.environ.get("STATIC_URL", "static/")
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"